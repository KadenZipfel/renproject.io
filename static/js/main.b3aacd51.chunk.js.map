{"version":3,"sources":["styles/images/icons/icon-feat-faster.svg","styles/images/icons/icon-feat-interop.svg","styles/images/icons/icon-feat-security.svg","styles/images/icons/more-questions-icon.svg","styles/images/icons/looking-for-help-icon.svg","styles/images/icons/icon-inf-counter.svg","styles/images/icons/icon-inf-lending.svg","styles/images/icons/icon-inf-pair.svg","styles/images/icons/gh-icon-star.svg","styles/images/icons/gh-icon-law.svg","styles/images/icons/icon-speech.svg","styles/images/icons/icon-docs.svg","styles/images/icons/icon-renvm-bft.svg","styles/images/icons/icon-renvm-hyperdrive.svg","styles/images/icons/icon-renvm-shamir.svg","styles/images/icons/icon-renvm-smpc.svg","lib/conversions.ts","components/ContentBlock.tsx","lib/constants.ts","components/ExternalLink.tsx","components/Footer.tsx","components/Menu.tsx","components/MobileMenu.tsx","components/Header.tsx","lib/medium.ts","store/context.tsx","components/MediumBanner.tsx","components/TeamItem.tsx","components/AboutPage.tsx","components/Featured.tsx","components/Featurettes.tsx","components/Newsletter.tsx","components/HelpBlock.tsx","components/HomePage.tsx","lib/github.ts","components/GithubBlock.tsx","components/GithubActivity.tsx","components/GithubStats.tsx","components/TelegramSelector.tsx","lib/milestone.ts","components/MilestoneBlock.tsx","components/Milestones.tsx","components/RoadmapPage.tsx","components/RenVMStory.tsx","components/OverviewBlock.tsx","components/RenVMPage.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","TimeMagnitude","Fade","require","ContentBlock","_this$props","this","props","logo","title","subtitle","children","react","up","distance","delay","className","src","React","REN_URLS","ExternalLink","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onClick","event","doNotTrack","href","gtag","event_category","value","inherits","createClass","key","_this$props2","rest","objectWithoutProperties","newProps","objectSpread","assign","target","rel","Footer","NavLink","to","ExternalLink_ExternalLink","Footer_CopySocial","CopySocial","react_fontawesome_index_es","icon","faFacebookF","faTwitter","faGithub","faTelegramPlane","faRedditAlien","Menu","handleOnClick","e","postClick","exact","activeClassName","MobileMenu","opened","components_Menu","Header","htmlEl","closeMenu","classList","remove","setState","menuOpened","state","bind","assertThisInitialized","handleEscape","document","documentElement","preventDefault","add","keyCode","addEventListener","removeEventListener","components_MobileMenu","dist_default","a","disableInlineStyles","wrapperStyle","width","zIndex","faTimes","faBars","pull","fetchMediumPosts","_ref","asyncToGenerator","regenerator_default","mark","_callee","mediumName","feedurl","resp","wrap","_context","prev","next","axios","get","sent","abrupt","data","response","stop","_x","StoreContext","StoreProvider","_React$useState","_React$useState2","slicedToArray","mediumPosts","setMediumPosts","_React$useState3","_React$useState4","githubRepos","setGithubRepos","_React$useState5","_React$useState6","context","githubActivity","setGithubActivity","Provider","MediumBanner","Consumer","withTrashable","mediumUrl","storeContext","fetchData","limit","allMediumPosts","sliceUntil","registerPromise","slice","isNew","timestamp","freshness","now","Date","ready","undefined","lib_default","arrows","dots","autoplay","autoplaySpeed","pauseOnFocus","map","post","id","uniqueSlug","firstPublishedAt","generateLink","MediumBannerInstance","TeamItem","name","position","github","twitter","linkedin","medium","faLinkedin","faMediumM","AboutPage","components_Header","components_ContentBlock","AboutPage_Fade","components_TeamItem","components_Footer","FeaturedButton","Featured","Featured_FeaturedButton","Featurettes","fasterIcon","interopIcon","securityIcon","Featurettes_Fade","Newsletter","HelpBlock","HomePage","questionsIcon","helpIcon","counterIcon","lendingIcon","pairIcon","components_Featured","components_Featurettes","HomePage_Fade","Newsletter_Newsletter","components_HelpBlock","fetchActivity","username","repo","ghGet","_x2","fetchRepos","_ref2","_callee2","repos","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","created_at","updated_at","pushed_at","newRepo","_context2","Symbol","iterator","done","push","t0","return","finish","_x3","calculateTotalActivity","_ref3","_callee3","promises","_context3","r","owner","login","then","stats","all","catch","err","console","error","Promise","allActivity","reduce","runningTally","current","num","idx","_x4","url","config","headers","Authorization","process","naturalTime","expiry","options","diff","days","countDown","moment","duration","unix","asDays","hours","asHours","minutes","asMinutes","seconds","asSeconds","suffix","Math","round","showingSeconds","floor","message","GithubLanguage","xmlns","viewBox","cx","cy","fill","colours","language","color","GithubStar","ghStar","count","GithubBlock","ghLaw","html_url","description","GithubBlock_GithubLanguage","GithubBlock_GithubStar","stargazers_count","license","spdx_id","getTime","GithubActivity","selected","setSelected","weeks","parseInt","substring","getLimit","activity","lineChartData","labels","series","lineChartOptions","height","low","min","toConsumableArray","high","max","chartPadding","axisX","showGrid","showLabel","offset","axisY","commitChanges","total","activitySteps","react_chartist_dist_default","type","step","index","GithubStats","setError","setReady","fetchAllRepos","usernames","l","lastUpdated","totalStars","languageCount","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","set","languages","from","keys","sort","lang1","lang2","calculateStats","fetchError","loadingMessage","esm","forceRenderTabPanel","GithubActivity_GithubActivity","lang","filterDate","setMonth","getMonth","filter","b","filterRepos","GithubBlock_GithubBlock","TelegramSelector","links","defaultValue","default","setValue","onChange","sortMilestones","self","other","achieved","defaultDate","selfDate","date","otherDate","MilestoneTag","tag","MilestoneBlock","toggle","open","_this2","_this$props$milestone","milestone","tags","nextAchieved","nextMilestone","toLocaleDateString","t","MilestoneBlock_MilestoneTag","platform","milestoneLink","Milestones","toggleTag","tagsFilter","size","has","delete","showMilestone","m","Set","x","allTags","milestones","forEach","_this$state","completedMilestones","incompleteMilestones","finalMilestones","i","MilestoneBlock_MilestoneBlock","RoadmapPage","speechIcon","RoadmapPage_Fade","Milestones_Milestones","TelegramSelector_TelegramSelector","RenVMStory","docsImage","OverviewBlock","image","RenVMPage","renvmStoryRef","scrollToStory","scrollIntoView","bftIcon","hyperdriveIcon","shamirIcon","smpcIcon","RenVMPage_Fade","OverviewBlock_OverviewBlock","ref","RenVMStory_RenVMStory","App","BrowserRouter","basename","context_StoreProvider","ScrollToTop","Route","path","component","withRouter","ScrollToTopWithoutRouter","prevProps","pathname","location","window","scrollTo","GA_MEASUREMENT_ID","page_path","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.b3aacd51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-feat-faster.2f693b41.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-feat-interop.ec72c97b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-feat-security.099de461.svg\";","module.exports = __webpack_public_path__ + \"static/media/more-questions-icon.23bbcc7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/looking-for-help-icon.94b1f336.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-inf-counter.9d9ad777.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-inf-lending.eb86f0f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-inf-pair.3258ea8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gh-icon-star.61cf0145.svg\";","module.exports = __webpack_public_path__ + \"static/media/gh-icon-law.650c3580.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-speech.6db89f5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-docs.f31cbb9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-renvm-bft.fe4b8d8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-renvm-hyperdrive.fffa59df.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-renvm-shamir.21edf993.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-renvm-smpc.64050f49.svg\";","import moment from \"moment\";\n\n/**\n * Converts a timestamp to the number of hours, minutes or seconds from now,\n * showing \"Expired\" if the timestamp has already passed.\n *\n * TODO: Make countdown schedule rerender (based on time unit)\n *\n * @param expiry the time to countdown to as a unix timestamp in seconds\n * @returns a JSX span element with the time remaining and a unit\n */\nexport const naturalTime = (expiry: number, options: { message: string; suffix?: string; countDown: boolean; showingSeconds?: boolean }): string => {\n    let diff;\n    if (!options.countDown) {\n        diff = moment.duration(moment().diff(moment.unix(expiry)));\n    } else {\n        diff = moment.duration(moment.unix(expiry).diff(moment()));\n    }\n    let days = diff.asDays();\n    let hours = diff.asHours();\n    let minutes = diff.asMinutes();\n    let seconds = diff.asSeconds();\n\n    const suffix = options.suffix ? ` ${options.suffix}` : \"\";\n\n    if (days > 2) {\n        days = Math.round(days);\n        return `${days} ${days === 1 ? \"day\" : \"days\"}${suffix}`;\n    }\n    if (hours >= 1) {\n        // Round to the closest hour\n        hours = Math.round(hours);\n        return `${hours} ${hours === 1 ? \"hour\" : \"hours\"}${suffix}`;\n    } else if (minutes >= 1) {\n        minutes = Math.round(minutes);\n        return `${minutes} ${minutes === 1 ? \"minute\" : \"minutes\"}${suffix}`;\n    } else if (options.showingSeconds && seconds >= 1) {\n        seconds = Math.floor(seconds);\n        return `${seconds} ${seconds === 1 ? \"second\" : \"seconds\"}${suffix}`;\n    } else {\n        return `${options.message}`;\n    }\n};\n\n// Sleep for specified number of milliseconds\n// tslint:disable-next-line: no-string-based-set-timeout\nexport const sleep = async (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\nexport const second = 1000;\n\nexport enum TimeMagnitude {\n    Second = 1 * second,\n    Minute = 60 * second,\n    Hour = 3600 * second,\n    Day = 86400 * second,\n}\n\n// Returns the the time units in which a time will be represented in by naturalTime\nexport const getTimeMagnitude = (expiry: number, showingSeconds = false): TimeMagnitude => {\n    let diff;\n    if (moment.unix(expiry).isBefore(moment())) {\n        diff = moment.duration(moment().diff(moment.unix(expiry)));\n    } else {\n        diff = moment.duration(moment.unix(expiry).diff(moment()));\n    }\n    const days = diff.asDays();\n    const hours = diff.asHours();\n    const minutes = diff.asMinutes();\n\n    if (days > 2) {\n        return TimeMagnitude.Day;\n    }\n    if (hours >= 1) {\n        return TimeMagnitude.Hour;\n    } else if (minutes >= 1 || !showingSeconds) {\n        return TimeMagnitude.Minute;\n    } else {\n        return TimeMagnitude.Second;\n    }\n};\n","import * as React from \"react\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\ninterface ContentBlockProps {\n    title?: string;\n    subtitle: string | React.ReactNode;\n    logo?: any;\n}\n\ninterface ContentBlockState {\n}\n\nclass ContentBlock extends React.Component<ContentBlockProps, ContentBlockState> {\n    public render(): JSX.Element {\n        const { logo, title, subtitle, children } = this.props;\n        return (\n            <Fade up distance=\"50px\" delay={100}>\n                <>\n                    {logo && <div className=\"content--logo\">\n                        <img src={logo} />\n                    </div>}\n                    <div className=\"content--heading\">\n                        {title &&\n                            <h4>{title}</h4>\n                        }\n                        <h1>{subtitle}</h1>\n                    </div>\n                    {children &&\n                        <div className=\"content--body\">\n                            {children}\n                        </div>\n                    }\n                </>\n            </Fade>\n        );\n    }\n}\n\nexport default ContentBlock;\n","export const REN_URLS = {\n    renEx: \"https://ren.exchange\",\n    twitter: \"https://twitter.com/renprotocol\",\n    medium: \"https://medium.com/renproject\",\n    facebook: \"https://facebook.com/renproject\",\n    github: \"https://github.com/renproject\",\n    reddit: \"https://www.reddit.com/r/renproject\",\n    telegram: \"https://t.me/renproject\",\n    telegramKorea: \"https://t.me/renkorea\",\n    telegramAnnouncements: \"https://t.me/renprojectann\",\n    zendesk: \"https://renproject.zendesk.com\",\n    gitbook: \"https://docs.renproject.io/ren\",\n    gitbookDarknodes: \"https://docs.renproject.io/darknodes/\",\n    typeform: \"https://renprotocol.typeform.com/to/YIxBSp\",\n    supportEmail: \"support@renproject.io\"\n}\n","import * as React from \"react\";\n\ninterface ExternalLinkProps extends React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> {\n    doNotTrack?: boolean;\n}\n\nexport class ExternalLink extends React.Component<ExternalLinkProps, {}> {\n    public render(): JSX.Element {\n        const { doNotTrack, children, onClick, ...rest } = this.props;\n        const newProps = {\n            ...rest,\n        };\n        if (!doNotTrack || onClick) {\n            newProps[\"onClick\"] = this.onClick;\n        }\n        return (\n            <a {...newProps} target=\"_blank\" rel=\"noopener noreferrer\">{children}</a>\n        );\n    }\n\n    private onClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        const { doNotTrack, href, onClick } = this.props;\n        if (!doNotTrack) {\n            gtag(\"event\", \"click\", {\n                \"event_category\": \"outbound_link\",\n                \"value\": href\n            });\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    };\n};\n","import * as React from \"react\";\n\nimport { faFacebookF, faGithub, faRedditAlien, faTelegramPlane, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { REN_URLS } from \"../lib/constants\";\nimport {ExternalLink} from \"./ExternalLink\";\n\nclass Footer extends React.Component {\n    public render(): JSX.Element {\n        return (\n            <>\n                <div className=\"footer\">\n                    <div className=\"container\">\n                        <NavLink to=\"/\">\n                            <div className=\"footer--logo\" />\n                        </NavLink>\n                        <div className=\"footer--links\">\n                            <p>Community</p>\n                            <ul>\n                                <li><ExternalLink href={REN_URLS.telegramAnnouncements}>Telegram Announcements</ExternalLink></li>\n                                <li><ExternalLink href={REN_URLS.telegram}>Telegram Community</ExternalLink></li>\n                                <li><ExternalLink href={REN_URLS.gitbook}>Help</ExternalLink></li>\n                            </ul>\n                        </div>\n                        <div className=\"footer--links\">\n                            <p>Developers</p>\n                            <ul>\n                                <li><ExternalLink href={REN_URLS.github}>GitHub</ExternalLink></li>\n                                {/* <li><a href=\"#\">Documentation</a></li> */}\n                            </ul>\n                        </div>\n                        <div className=\"footer--links\">\n                            <p>Blog</p>\n                            <ul>\n                                <li><ExternalLink href={REN_URLS.medium}>Medium</ExternalLink></li>\n                            </ul>\n                        </div>\n                        <div className=\"footer--links\">\n                            <p>Ren</p>\n                            <ul>\n                                <li><NavLink to=\"/about\">About</NavLink></li>\n                                <li><ExternalLink href=\"whitepaper_1.0.0.pdf\">Whitepaper (2017)</ExternalLink></li>\n                                <li><ExternalLink href=\"litepaper.pdf\">Litepaper (2019)</ExternalLink></li>\n                                {/* <li><a href=\"#\">Terms of Service</a></li>\n                                <li><a href=\"#\">Privacy Policy</a></li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"copy\">\n                    <div className=\"container\">\n                        <p>Copyright &copy; 2018 Ren.</p>\n                        <CopySocial />\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport const CopySocial = () => {\n    return (\n        <ul className=\"copy--social\">\n            <li><ExternalLink title=\"Facebook\" href={REN_URLS.facebook}><FontAwesomeIcon icon={faFacebookF} /></ExternalLink></li>\n            <li><ExternalLink title=\"Twitter\" href={REN_URLS.twitter}><FontAwesomeIcon icon={faTwitter} /></ExternalLink></li>\n            <li><ExternalLink title=\"Github\" href={REN_URLS.github}><FontAwesomeIcon icon={faGithub} /></ExternalLink></li>\n            <li><ExternalLink title=\"Telegram\" href={REN_URLS.telegram}><FontAwesomeIcon icon={faTelegramPlane} /></ExternalLink></li>\n            <li><ExternalLink title=\"Reddit\" href={REN_URLS.reddit}><FontAwesomeIcon icon={faRedditAlien} /></ExternalLink></li>\n        </ul>\n    );\n};\n\nexport default Footer;\n","import * as React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { REN_URLS } from \"../lib/constants\";\nimport { ExternalLink } from \"./ExternalLink\";\n\n\ninterface MenuProps {\n    postClick?: () => void;\n}\n\ninterface MenuState {\n}\n\nclass Menu extends React.Component<MenuProps, MenuState> {\n    public render(): JSX.Element {\n        return (\n            <>\n                <li className=\"menu--link\"><NavLink onClick={this.handleOnClick} to=\"/\" exact activeClassName=\"active\">Home</NavLink></li>\n                <li className=\"menu--link\"><NavLink onClick={this.handleOnClick} to=\"/about\" activeClassName=\"active\">About</NavLink></li>\n                <li className=\"menu--link\"><NavLink onClick={this.handleOnClick} to=\"/roadmap\" activeClassName=\"active\">Roadmap</NavLink></li>\n                <li className=\"menu--link\"><NavLink onClick={this.handleOnClick} to=\"/renvm\" activeClassName=\"active\">RenVM</NavLink></li>\n                <li className=\"menu--link\"><ExternalLink onClick={this.handleOnClick} href={REN_URLS.medium}>Blog</ExternalLink></li>\n                <li className=\"menu--link\"><ExternalLink onClick={this.handleOnClick} href={REN_URLS.gitbook}>Help</ExternalLink></li>\n            </>\n        );\n    }\n\n    private handleOnClick = (e: React.MouseEvent<HTMLElement>): void => {\n        const { postClick } = this.props;\n        if (postClick) {\n            postClick();\n        }\n    }\n\n}\n\nexport default Menu;\n","import * as React from \"react\";\n\nimport { CopySocial } from \"./Footer\";\nimport Menu from \"./Menu\";\n\ninterface MobileMenuProps {\n    opened: boolean;\n    postClick?: () => void;\n}\n\ninterface MobileMenuState {\n}\n\n\nclass MobileMenu extends React.Component<MobileMenuProps, MobileMenuState> {\n    public render(): JSX.Element {\n        const { opened, postClick } = this.props;\n        return (\n            <div className={`mobile--menu ${opened ? \"\" : \"closed\"}`} >\n                <ul>\n                    <Menu postClick={postClick} />\n                </ul >\n                <div className=\"mobile--menu--footer\">\n                    <CopySocial />\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default MobileMenu;\n","import * as React from \"react\";\n\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Headroom from \"react-headroom\";\nimport { NavLink } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport { CopySocial } from \"./Footer\";\n\ninterface HeaderProps {\n}\n\ninterface HeaderState {\n    menuOpened: boolean;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n    private htmlEl: HTMLElement;\n    public constructor(props: HeaderProps) {\n        super(props);\n        this.state = {\n            menuOpened: false,\n        };\n        this.handleOnClick = this.handleOnClick.bind(this);\n        this.handleEscape = this.handleEscape.bind(this);\n        this.htmlEl = document.documentElement as HTMLElement;\n    }\n\n    public handleOnClick(e: React.MouseEvent<HTMLElement>): void {\n        e.preventDefault();\n        if (this.state.menuOpened) {\n            // We're about to close the menu\n            this.htmlEl.classList.remove(\"noscroll\");\n        } else {\n            // We're about to open the menu\n            this.htmlEl.classList.add(\"noscroll\");\n        }\n        this.setState({\n            menuOpened: !this.state.menuOpened,\n        });\n    }\n\n    public handleEscape(e: any) {\n        if (e.keyCode === 27 && this.state.menuOpened) {\n            this.closeMenu();\n        }\n    }\n\n    public componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleEscape, false);\n    }\n    public componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.handleEscape, false);\n    }\n\n    public render(): JSX.Element {\n        return (\n            <>\n                <MobileMenu opened={this.state.menuOpened} postClick={this.closeMenu} />\n                <div className=\"fake--header\" />\n                <Headroom className={this.state.menuOpened ? \"open\" : \"closed\"} disableInlineStyles wrapperStyle={{ width: \"100%\", zIndex: \"10\" }}>\n                    <div className=\"header\">\n                        <div className=\"container\">\n                            <NavLink to=\"/\" className=\"home--link\">\n                                <div className=\"header--logo\" />\n                            </NavLink>\n                            <ul className=\"header--menu\">\n                                <Menu />\n                                <li className=\"menu--toggle menu--link\"><a href=\"#\" onClick={this.handleOnClick}><FontAwesomeIcon icon={this.state.menuOpened ? faTimes : faBars} pull=\"left\" /></a></li>\n                                <CopySocial />\n                            </ul>\n                        </div>\n                    </div>\n                </Headroom>\n            </>\n        );\n    }\n\n    private closeMenu = (): void => {\n        this.htmlEl.classList.remove(\"noscroll\");\n        this.setState({\n            menuOpened: false,\n        });\n    }\n\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nconst MEDIUM_FEED_URL = \"https://medium-article-feed.herokuapp.com\";\n\nexport interface MediumPost {\n    id: string;\n    versionId: string;\n    creatorId: string;\n    homeCollectionId: string;\n    title: string;\n    detectedLanguage: string;\n    latestVersion: string;\n    latestPublishedVersion: string;\n    hasUnpublishedEdits: boolean;\n    latestRev: number;\n    createdAt: number;\n    updatedAt: number;\n    acceptedAt: number;\n    firstPublishedAt: number;\n    latestPublishedAt: number;\n    vote: boolean;\n    experimentalCss: string;\n    displayAuthor: string;\n    virtuals: {\n        statusForCollection: string;\n        allowNotes: true;\n        previewImage: {\n            imageId: string;\n            filter: string;\n            backgroundSize: string;\n            originalWidth: number;\n            originalHeight: number;\n            strategy: string;\n            height: number;\n            width: number;\n        };\n        wordCount: number;\n        imageCount: number;\n        readingTime: number;\n        subtitle: string;\n        publishedInCount: number;\n        usersBySocialRecommends: any[];\n        noIndex: boolean;\n        recommends: number;\n        isBookmarked: boolean;\n        tags: [\n            {\n                slug: string;\n                name: string;\n                postCount: number;\n                metadata: {\n                    postCount: number;\n                    coverImage: {\n                        id: string;\n                        originalWidth: number;\n                        originalHeight: number;\n                        isFeatured: boolean;\n                    }\n                };\n                type: string;\n            }\n        ];\n        socialRecommendsCount: number;\n        responsesCreatedCount: number;\n        links: {\n            entries: [\n                {\n                    url: string;\n                    alts: [\n                        {\n                            type: number;\n                            url: string;\n                        }\n                    ];\n                    httpStatus: number;\n                }\n            ];\n            version: string;\n            generatedAt: number;\n        };\n        isLockedPreviewOnly: boolean;\n        takeoverId: string;\n        metaDescription: string;\n        totalClapCount: number;\n        sectionCount: number;\n        readingList: number;\n        topics: any[];\n    };\n    coverless: boolean;\n    slug: string;\n    translationSourcePostId: string;\n    translationSourceCreatorId: string;\n    isApprovedTranslation: boolean;\n    inResponseToPostId: string;\n    inResponseToRemovedAt: number;\n    isTitleSynthesized: boolean;\n    allowResponses: boolean;\n    importedUrl: string;\n    importedPublishedAt: number;\n    visibility: number;\n    uniqueSlug: string;\n    previewContent: {\n        bodyModel: {\n            paragraphs: [\n                {\n                    name: string;\n                    type: number;\n                    text: string;\n                    layout?: number;\n                    metadata?: {\n                        id: string;\n                        originalWidth: number;\n                        originalHeight: number;\n                        isFeatured: boolean;\n                    };\n                    alignment?: number;\n                    markups?: [\n                        {\n                            type: number;\n                            start: number;\n                            end: number;\n                            href: string;\n                            title: string;\n                            rel: string;\n                            anchorType: number;\n                        }\n                    ];\n                }\n            ];\n            sections: [\n                {\n                    startIndex: number;\n                }\n            ];\n        };\n        isFullContent: boolean;\n        subtitle: string;\n    };\n    license: number;\n    inResponseToMediaResourceId: string;\n    canonicalUrl: string;\n    approvedHomeCollectionId: string;\n    newsletterId: string;\n    webCanonicalUrl: string;\n    mediumUrl: string;\n    migrationId: string;\n    notifyFollowers: boolean;\n    notifyTwitter: boolean;\n    notifyFacebook: boolean;\n    responseHiddenOnParentPostAt: number;\n    isSeries: boolean;\n    isSubscriptionLocked: boolean;\n    seriesLastAppendedAt: number;\n    audioVersionDurationSec: number;\n    sequenceId: string;\n    isNsfw: boolean;\n    isEligibleForRevenue: boolean;\n    isBlockedFromHightower: boolean;\n    deletedAt: number;\n    lockedPostSource: number;\n    hightowerMinimumGuaranteeStartsAt: number;\n    hightowerMinimumGuaranteeEndsAt: number;\n    featureLockRequestAcceptedAt: number;\n    mongerRequestType: number;\n    layerCake: number;\n    socialTitle: string;\n    socialDek: string;\n    editorialPreviewTitle: string;\n    editorialPreviewDek: string;\n    curationEligibleAt: number;\n    type: string;\n}\n\n\nexport const fetchMediumPosts = async (mediumName: string): Promise<MediumPost[]> => {\n    const feedurl = `${MEDIUM_FEED_URL}/${mediumName}/latest`;\n    const resp = await axios.get(feedurl);\n    return resp.data.response as MediumPost[];\n}\n","import * as React from \"react\";\nimport { MediumPost } from \"../lib/medium\";\nimport { GithubRepo } from \"../lib/github\";\n\ninterface StoreInterface {\n  mediumPosts: MediumPost[];\n  githubRepos: GithubRepo[];\n  githubActivity: number[];\n  setMediumPosts: any;\n  setGithubRepos: any;\n  setGithubActivity: any;\n}\n\nexport const StoreContext = React.createContext<StoreInterface | null>(null);\n\nexport const StoreProvider = (props: any) => {\n  const [mediumPosts, setMediumPosts] = React.useState([]);\n  const [githubRepos, setGithubRepos] = React.useState([]);\n  const [githubActivity, setGithubActivity] = React.useState([]);\n  const context: StoreInterface = {\n    mediumPosts,\n    setMediumPosts,\n    githubActivity,\n    setGithubActivity,\n    githubRepos,\n    setGithubRepos,\n  };\n  return (\n    <StoreContext.Provider value={context}>\n      {props.children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const { Consumer } = StoreContext;\n","import * as React from \"react\";\n\nimport Slider from \"react-slick\";\n\nimport { ExternalLink } from \"./ExternalLink\";\nimport { TrashableProps, withTrashable } from \"react-trashable\";\nimport { fetchMediumPosts, MediumPost } from \"../lib/medium\";\nimport { StoreContext } from \"../store/context\";\n\ninterface MediumBannerProps extends TrashableProps {\n    /** The username of the medium account */\n    mediumName: string;\n    /** The maximum number of posts to display in the banner */\n    limit?: number;\n    /** The maximum number of days since posting for a post to be considered \"new\".\n     *  If freshness is undefined or 0, the \"new\" label will be disabled.\n     */\n    freshness?: number;\n}\n\nconst MediumBannerClass = (props: MediumBannerProps) => {\n    const mediumUrl: string = `https://medium.com/${props.mediumName}/`;\n    const storeContext = React.useContext(StoreContext);\n    if (storeContext === null) {\n        return <></>;\n    }\n\n    const { mediumPosts, setMediumPosts } = storeContext;\n\n    const fetchData = async () => {\n        const { mediumName, limit } = props;\n        const allMediumPosts = await props.registerPromise(fetchMediumPosts(mediumName));\n        const sliceUntil = (limit && limit > 0) ? limit : allMediumPosts.length;\n        setMediumPosts(allMediumPosts.slice(0, sliceUntil));\n    }\n\n    React.useEffect(() => {\n        fetchData();\n    }, []);\n\n    const generateLink = (post: MediumPost): JSX.Element => {\n        return (\n            <div className=\"medium-banner--link content--links\" key={post.id}>\n                <ExternalLink href={mediumUrl + post.uniqueSlug}>\n                    <span className={isNew(post.firstPublishedAt) ? \"new\" : \"\"}>{post.title} &rarr;</span>\n                </ExternalLink>\n            </div>\n        );\n    }\n\n    const isNew = (timestamp: number): boolean => {\n        const { freshness } = props;\n        // If freshness is undefined or <= zero, then don't show \"new\" label\n        if (!freshness || freshness <= 0) {\n            return false;\n        }\n        // Timestamps can be in the future (due to timezones)\n        const now = Date.now();\n        if (now <= timestamp) {\n            return true;\n        }\n        // Otherwise check the number of days in between\n        const daysBetween = (now - timestamp) / 1000 / 60 / 60 / 24;\n        return daysBetween < freshness;\n    }\n\n    const ready = mediumPosts !== undefined && mediumPosts.length > 0;\n\n    const settings = {\n        arrows: false,\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 5000,\n        pauseOnFocus: true,\n    };\n    return (\n        <div className=\"medium-banner\">\n            <div className=\"container\">\n                <Slider className={`medium-banner--slider ${ready ? \"ready\" : \"\"}`} {...settings}>\n                    {mediumPosts.map(post => generateLink(post))}\n                </Slider>\n            </div>\n        </div>\n    );\n\n}\n\nexport const MediumBanner = withTrashable(MediumBannerClass);\n\nexport const MediumBannerInstance = <MediumBanner mediumName=\"renproject\" limit={3} freshness={3} />;\n","import * as React from \"react\";\n\nimport { faGithub, faLinkedin, faMediumM, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ExternalLink } from \"./ExternalLink\";\n\ninterface TeamItemProps {\n    name: string;\n    position: string;\n    github?: string;\n    twitter?: string;\n    linkedin?: string;\n    medium?: string;\n}\n\ninterface TeamItemState {\n}\n\nclass TeamItem extends React.Component<TeamItemProps, TeamItemState> {\n    public render(): JSX.Element {\n        const { name, position, github, twitter, linkedin, medium } = this.props;\n        return (\n            <div className=\"team--item\">\n                <h4>{name}</h4>\n                <p>{position}</p>\n                <ul className=\"team--links\">\n                    {github &&\n                        <li><ExternalLink href={`https://github.com/${github}`} doNotTrack={true}><FontAwesomeIcon icon={faGithub} /></ExternalLink></li>\n                    }\n                    {twitter &&\n                        <li><ExternalLink href={`https://twitter.com/${twitter}`} doNotTrack={true}><FontAwesomeIcon icon={faTwitter} /></ExternalLink></li>\n                    }\n                    {linkedin &&\n                        <li><ExternalLink href={`https://www.linkedin.com/in/${linkedin}`} doNotTrack={true}><FontAwesomeIcon icon={faLinkedin} /></ExternalLink></li>\n                    }\n                    {medium &&\n                        <li><ExternalLink href={`https://medium.com/${medium}`} doNotTrack={true}><FontAwesomeIcon icon={faMediumM} /></ExternalLink></li>\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default TeamItem;\n","import * as React from \"react\";\n\nimport { faMediumM } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// import ContactItem from \"./ContactItem\";\nimport ContentBlock from \"./ContentBlock\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport { MediumBannerInstance } from \"./MediumBanner\";\nimport TeamItem from \"./TeamItem\";\nimport { REN_URLS } from \"../lib/constants\";\nimport { ExternalLink } from \"./ExternalLink\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\nclass AboutPage extends React.Component {\n    public render(): JSX.Element {\n        return (\n            <div className=\"about\">\n                <Header />\n                <div className=\"section section--banner\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock subtitle=\"Powering the free movement of value between blockchains in zero-knowledge.\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {MediumBannerInstance}\n                <div className=\"section section--story\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock subtitle={<>Working towards a private <br />and interoperable world of <br />decentralized finance.</>}>\n                                    <p>Ren allows the free movement of value between all blockchains and transfer of tokens in zero-knowledge. Unlocking new liquidity and resources to power a new wave of value in the open finance movement.</p>\n                                    <p>With Ren all decentralized applications can run in secret, preserving the privacy of all users and data.</p>\n                                    <div className=\"content--buttons\">\n                                        {/* <ExternalLink className={`featured--button primary`}>RenVM Overview</ExternalLink> */}\n                                        <ExternalLink href={`mailto:${REN_URLS.supportEmail}`} className={`featured--button secondary`}>Get in touch</ExternalLink>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                            {/* <div className=\"section--stats\">\n                                <h1>30-40%</h1>\n                                <p>of traditional stock is traded on dark pools in the US<sup>1</sup>.</p>\n                                <h1>$8.8 billion USD</h1>\n                                <p>traded in cryptocurrency daily<sup>2</sup>.</p>\n                                <ul className=\"section--footnotes\">\n                                    <li>1 &nbsp; Financial Industry Regulatory Authority, 2014</li>\n                                    <li>2 &nbsp; CoinMarketCap, 2018</li>\n                                </ul>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"team\">\n                    <Fade up distance=\"50px\" delay={100}>\n                        <div className=\"container\">\n                            <h1>The Team</h1>\n                            <div className=\"row\">\n                                <TeamItem name=\"Taiyang Zhang\" position=\"CEO\" github=\"sixteen\" twitter=\"bftzhang\" linkedin=\"taiyangzhang\" medium=\"@taiyangzhang\" />\n                                <TeamItem name=\"Loong Wang\" position=\"CTO\" github=\"loongy\" twitter=\"bzlwang\" linkedin=\"bzlwang\" medium=\"@loong\" />\n                            </div>\n                            <div className=\"row\">\n                                <TeamItem name=\"Susruth Nadimpalli\" position=\"Blockchain Developer\" github=\"susruth\" linkedin=\"susruth-nadimpalli\" />\n                                <TeamItem name=\"Noah I\" position=\"Software Developer\" github=\"noiach\" />\n                                <TeamItem name=\"Yunshi Sun\" position=\"Software Developer\" github=\"tok-kkk\" linkedin=\"yunshi-sun\" />\n                                <TeamItem name=\"Jaz Gulati\" position=\"Software Developer\" github=\"jazg\" linkedin=\"jazg\" />\n                                <TeamItem name=\"Divya Mary\" position=\"Software Developer\" github=\"divyakoshy\" linkedin=\"divya-mary-5a5969104\" />\n                                <TeamItem name=\"Vincent Au\" position=\"Software Developer\" github=\"vinceau\" linkedin=\"vinceau\" />\n                                <TeamItem name=\"Ross Pure\" position=\"Researcher\" github=\"ross-pure\" />\n                                <TeamItem name=\"Darren Toh\" position=\"Legal &amp; Communications\" linkedin=\"darren-toh-2a29885\" />\n                                <TeamItem name=\"Michael Burgess\" position=\"Operations\" linkedin=\"michaelwburgess\" twitter=\"mw_burgess\" />\n                                <TeamItem name=\"Vincent Ward\" position=\"Design\" twitter=\"thevward\" linkedin=\"vincent-ward-7395b4b8\" />\n                            </div>\n                        </div>\n                    </Fade>\n                </div>\n                <div className=\"team\">\n                    <Fade up distance=\"50px\" delay={100}>\n                        <div className=\"container\">\n                            <h1>The Advisors</h1>\n                            <div className=\"row\">\n                                <TeamItem name=\"Dorjee Sun\" position=\"CEO, Perlin Network\" linkedin=\"dorjee\" />\n                                <TeamItem name=\"Loi Luu\" position=\"CEO, KyberNetwork\" linkedin=\"loiluu\" />\n                                <TeamItem name=\"John Ng Pangilinan\" position=\"Partner, Signum Capital\" linkedin=\"johnngp\" />\n                                <TeamItem name=\"Prabhakar Reddy\" position=\"Investor, Accel Partners\" linkedin=\"prabhakar2reddy\" />\n                                <TeamItem name=\"Anup Malani\" position=\"Economics, University of Chicago\" linkedin=\"anup-malani-a1551b2\" />\n                            </div>\n                        </div>\n                    </Fade>\n                </div>\n                <div className=\"medium--banner\">\n                    <div className=\"container\">\n                        <div className=\"banner--content\">\n                            <p>Stay up to date with updates and news posted through the blog.</p>\n                            <ExternalLink className=\"button button--alt\" href={REN_URLS.medium}><FontAwesomeIcon icon={faMediumM} pull=\"left\" />Visit the Blog</ExternalLink>\n                        </div>\n                    </div>\n                </div>\n                {/*<div className=\"contact\">\n                    <div className=\"container\">\n                        <ContactItem name=\"Partnerships\" email=\"partnerships@republicprotocol.com\" />\n                        <ContactItem name=\"Community Initiatives\" email=\"community@republicprotocol.com\" />\n                        <ContactItem name=\"Technical Support\" email=\"technical@republicprotocol.com\" />\n                    </div>\n                </div>*/}\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default AboutPage;\n","import * as React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faRedditAlien } from \"@fortawesome/free-brands-svg-icons\";\n\nimport ContentBlock from \"./ContentBlock\";\nimport { REN_URLS } from \"../lib/constants\";\nimport { ExternalLink } from \"./ExternalLink\";\n\ninterface FeaturedProps {\n    title?: string;\n}\n\ninterface FeaturedState {\n}\n\ninterface FeaturedButtonProps extends Readonly<{ children?: React.ReactNode }> {\n    href: string;\n    title: string;\n    className?: string;\n}\n\nconst FeaturedButton = (props: FeaturedButtonProps) => {\n    return <ExternalLink className={`featured--button ${props.className ? props.className : \"\"}`} title={props.title} href={props.href}>{props.children && <span className=\"button--icon\">{props.children}</span>}{props.title}</ExternalLink>;\n};\n\nclass Featured extends React.Component<FeaturedProps, FeaturedState> {\n    public render(): JSX.Element {\n        return (\n            <div className=\"section featured\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"featured--content\">\n                            <ContentBlock subtitle=\"Liquidity, unchained.\">\n                                <p>The first and only open protocol that provides access to <br />inter-blockchain liquidity for all decentralized applications.</p>\n\n                                <div className=\"featured--buttons\">\n                                    <FeaturedButton className=\"primary\" href={REN_URLS.gitbook} title=\"Read the docs\"></FeaturedButton>\n                                    <div className=\"social--links\">\n                                        <ExternalLink className=\"social\" href={REN_URLS.twitter}><span className=\"social--icon\"><FontAwesomeIcon icon={faTwitter} /></span>Follow us on Twitter</ExternalLink>\n                                        <ExternalLink className=\"social\" href={REN_URLS.reddit}><span className=\"social--icon\"><FontAwesomeIcon icon={faRedditAlien} /></span>Subscribe on Reddit</ExternalLink>\n                                    </div>\n                                </div>\n                            </ContentBlock>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Featured;\n","import * as React from \"react\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\nclass Featurettes extends React.Component {\n    public render(): JSX.Element {\n        const fasterIcon = require(\"../styles/images/icons/icon-feat-faster.svg\");\n        const interopIcon = require(\"../styles/images/icons/icon-feat-interop.svg\");\n        const securityIcon = require(\"../styles/images/icons/icon-feat-security.svg\");\n        return (\n            <div className=\"featurettes\">\n                <div className=\"container\">\n                    <div className=\"featurettes--items\">\n                        <Fade up delay={100}>\n                            <div className=\"featurettes--item\">\n                                <img src={fasterIcon} />\n                                <div>\n                                    <p>100x faster than atomic swaps</p>\n                                </div>\n                            </div>\n                        </Fade>\n                        <Fade up delay={300}>\n                            <div className=\"featurettes--item\">\n                                <img src={interopIcon} />\n                                <div>\n                                    <p>Integrates into existing infrastructure</p>\n                                </div>\n                            </div>\n                        </Fade>\n                        <Fade up delay={500}>\n                            <div className=\"featurettes--item\">\n                                <img src={securityIcon} />\n                                <div>\n                                    <p>Security for large volume trades</p>\n                                </div>\n                            </div>\n                        </Fade>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Featurettes;\n","import * as React from \"react\";\n\nimport { ExternalLink } from \"./ExternalLink\";\nimport { REN_URLS } from \"../lib/constants\";\n\nexport const Newsletter = () => (\n    <div className=\"newsletter--container\">\n        <div className=\"newsletter\">\n            <h2>Want to integrate RenVM?</h2>\n            <p>Sign up here and we'll let you know when it's ready!</p>\n            <ExternalLink className=\"featured--button primary\" href={REN_URLS.typeform}>Sign up</ExternalLink>\n        </div>\n    </div>\n);\n","import * as React from \"react\";\n\ninterface HelpBlockProps {\n    title: string;\n    subtitle: string;\n    icon: string;\n}\n\ninterface HelpBlockState {\n}\n\nclass HelpBlock extends React.Component<HelpBlockProps, HelpBlockState> {\n    public render(): JSX.Element {\n        const { title, subtitle, icon } = this.props;\n        return (\n            <div className=\"help--block--content\">\n                <img src={icon} />\n                <h2>{title}</h2>\n                <span>{subtitle} &rarr;</span>\n            </div>\n        );\n    }\n}\n\nexport default HelpBlock;\n","import * as React from \"react\";\n\n// import { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// import ContactItem from \"./ContactItem\";\nimport ContentBlock from \"./ContentBlock\";\n// import { ExpandableList } from \"./ExpandableList\";\nimport Featured from \"./Featured\";\nimport Featurettes from \"./Featurettes\";\nimport Footer from \"./Footer\";\n// import GridItem from \"./GridItem\";\nimport Header from \"./Header\";\n// import ListItem from \"./ListItem\";\nimport { MediumBannerInstance } from \"./MediumBanner\";\n// import { REN_URLS } from \"../lib/constants\";\nimport { ExternalLink } from \"./ExternalLink\";\nimport { Newsletter } from \"./Newsletter\";\nimport HelpBlock from \"./HelpBlock\";\nimport { REN_URLS } from \"../lib/constants\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\nclass HomePage extends React.Component {\n    public render(): JSX.Element {\n        const questionsIcon = require(\"../styles/images/icons/more-questions-icon.svg\");\n        const helpIcon = require(\"../styles/images/icons/looking-for-help-icon.svg\");\n        const counterIcon = require(\"../styles/images/icons/icon-inf-counter.svg\");\n        const lendingIcon = require(\"../styles/images/icons/icon-inf-lending.svg\");\n        const pairIcon = require(\"../styles/images/icons/icon-inf-pair.svg\");\n        // const techStackImage = require(\"../styles/images/illustration-tech-stack-2.svg\");\n        // const codeImage = require(\"../styles/images/icons/rp-icon-code.svg\");\n        // const codeImageHover = require(\"../styles/images/icons/rp-icon-code-hvr.svg\");\n        return (\n            <div className=\"home\">\n                <Header />\n                {MediumBannerInstance}\n                <Featured />\n                <div className=\"section section--cross-chain\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock subtitle={<>Transfer any token <br />between any blockchain.</>}>\n                                    <p>Access tokens from any blockchain using your existing smart contracts <br />without having to worry about wrapping or unwrapping tokens.</p>\n                                    <div className=\"content--buttons\">\n                                        <a href=\"/renvm\" className=\"content--link\" >How it works &rarr;</a>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Featurettes />\n                <div className=\"section section--token\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock subtitle={<>Infrastructure for <br />connecting the unconnected</>}>\n                                    <p>Use RenVM to expand the capability of existing dApps or create <br />entirely new business cases within the decentralized world.</p>\n                                    <div className=\"infrastructure--list\">\n                                        <div className=\"infrastructure--list--item\">\n                                            <div>\n                                                <img src={counterIcon} />\n                                            </div>\n                                            <div>\n                                                <h2>No counterparty risk</h2>\n                                                <p>Traders conducting large volume OTC trades no longer at risk of counterparties failing to honor the trade.</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"infrastructure--list--item\">\n                                            <div>\n                                                <img src={pairIcon} />\n                                            </div>\n                                            <div>\n                                                <h2>Increase token pairs</h2>\n                                                <p>Integrate cross-chain assets such as Bitcoin and Zcash into existing DEX or liquidity pool infrastructure.</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"infrastructure--list--item\">\n                                            <div>\n                                                <img src={lendingIcon} />\n                                            </div>\n                                            <div>\n                                                <h2>Multi-collateral lending</h2>\n                                                <p>Utilize your existing non-custodial smart <br />contracts to collateralize cross-chain assets.</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section section--ren\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock title=\"Darknodes\" subtitle={<>Powering decentralized, <br />trustless, permissionless applications.</>}>\n                                    <p>Darknodes all around the world run the applications built on RenVM in complete secrecy. Darknodes are incentivized to work by capturing a percentage of volume transacted through RenVM.</p>\n                                    <div className=\"content--buttons\">\n                                        <ExternalLink href={REN_URLS.gitbookDarknodes} className=\"content--link\" >More about Darknodes &rarr;</ExternalLink>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Fade up distance=\"50px\" delay={100}>\n                    <Newsletter />\n                    <div className=\"section--helpblocks\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"content\">\n                                    <a href=\"/renvm\" className=\"help--block\">\n                                        <HelpBlock title=\"More questions?\" subtitle=\"Read more about RenVM\" icon={questionsIcon} />\n                                    </a>\n                                    <ExternalLink href={`mailto:${REN_URLS.supportEmail}`} className=\"help--block\">\n                                        <HelpBlock title=\"Looking for help?\" subtitle={`Email us at ${REN_URLS.supportEmail}`} icon={helpIcon} />\n                                    </ExternalLink>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Fade>\n                {/*\n                <div className=\"section section--renex\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <img className=\"techstack--img--mobile\" src={techStackImage} />\n                                <ContentBlock subtitle=\"A suite of privacy-focused tools for dark pools and other financial applications.\">\n                                    <ExpandableList items={[\n                                        {\n                                            title: \"Application Layer\",\n                                            description: <p>Build applications that run in complete secrecy, where no one can reveal the inputs or application state. Utilize our core financial layers to empower your applications to make private transactions and to interoperate between blockchains.</p>,\n                                            image: \"illustration-application.svg\",\n                                        },\n                                        {\n                                            title: \"Dark Pool Layer\",\n                                            description: <p>Any party can setup and deploy their own dark pool exchange utilizing a hidden order book. Traders can open orders, and settle order matches, in secret. Prices and amounts are never revealed.</p>,\n                                            image: \"illustration-darkpool.svg\",\n                                        },\n                                        {\n                                            title: \"Interoperability Layer\",\n                                            description: <p>Instantly execute trustless swaps between blockchains in secret, without hash-time lock contracts. Work with tokens on their native blockchains without the need for trusted third-parties, federations, or centralized exchanges.</p>,\n                                            image: \"illustration-interoperability.svg\",\n                                        },\n                                        {\n                                            title: \"Zero Knowledge Transactions\",\n                                            description: <p>Store and transfer tokens from any blockchain without exposing wallet balances or transaction amounts. Enables sensitive OTC deals and eliminates front-running. Use this tool to build your own completely private settlement layer.</p>,\n                                            image: \"illustration-zeroknowledge.svg\",\n                                        },\n                                        {\n                                            title: \"RenVM\",\n                                            description: <>\n                                                <p>RenVM powers the entire ecosystem. It is a general purpose virtual machine allowing anyone to perform private computations in a decentralized network without revealing information to anyone.</p>\n                                                <p>Leverage RenVM to build your own unstoppable private application.</p>\n                                            </>,\n                                            image: \"illustration-renvm.svg\",\n                                        }]} />\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section section--protocol\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock logo={renexLogo} subtitle=\"Dark pool trading of digital assets with privacy protecting settlement.\">\n                                    <p>RenEx is an officially supported dark pool exchange for trading digital assets in secret, built on Ren. Trade now without revealing your orders, free from front-running and counterparty risk.</p>\n                                    <div className=\"content--buttons\">\n                                        <div>\n                                            <ExternalLink className=\"button\" href={REN_URLS.renEx}>Trade on RenEx</ExternalLink>\n                                        </div>\n                                        <ExternalLink className=\"content--link\" href={`${REN_URLS.zendesk}/hc/en-us/categories/360000458534-Trading-on-RenEx`}>More about RenEx</ExternalLink>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"exchanges\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <h2 className=\"exchanges--heading\">Find REN on these exchanges</h2>\n                            <GridItem type=\"exchanges\" link=\"https://idex.market\" image=\"idex.png\" height={48} />\n                            <GridItem type=\"exchanges\" link=\"https://www.binance.com\" image=\"binance.svg\" height={48} brightness={30} />\n                            <GridItem type=\"exchanges\" link=\"https://www.okex.com\" image=\"okex.png\" height={61} />\n                            <GridItem type=\"exchanges\" link=\"https://www.hbg.com\" image=\"huobi.png\" height={52} />\n                            <GridItem type=\"exchanges\" link=\"https://www.uex.com\" image=\"uex.png\" height={50} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section section--builders\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"section--content\">\n                                <ContentBlock subtitle=\"Build with Ren.\">\n                                    <p>Build a Dark Pool or utilize our other privacy preserving layers to create financial applications. Get in touch if you have a project idea you’d like to discuss with the Ren team.</p>\n                                    <div className=\"content--buttons\">\n                                        <div>\n                                            <ExternalLink className=\"button\" href={REN_URLS.github}><FontAwesomeIcon icon={faGithub} pull=\"left\" />Go to Github</ExternalLink>\n                                        </div>\n                                        <a className=\"content--link\" href=\"mailto:build@renproject.io\">build@renproject.io</a>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                            <div className=\"section--list\">\n                                <div className=\"list\">\n                                    <ListItem title=\"Republic-Go &rarr;\" description=\"An official reference implementation of Republic Protocol, written in Go.\" link=\"https://github.com/republicprotocol/republic-go\" image={codeImage} imageHover={codeImageHover} />\n                                    <ListItem title=\"Republic-Sol &rarr;\" description=\"An implementation of Republic Protocol smart contracts, written in Solidity.\" link=\"https://github.com/republicprotocol/republic-sol\" image={codeImage} imageHover={codeImageHover} />\n                                    <ListItem title=\"RenEx-Sol &rarr;\" description=\"RenEx Ethereum contracts, written in Solidity.\" link=\"https://github.com/republicprotocol/renex-sol\" image={codeImage} imageHover={codeImageHover} />\n                                    <ListItem title=\"Co-Go &rarr;\" description=\"A high level concurrency and parallelism library.\" link=\"https://github.com/republicprotocol/co-go\" image={codeImage} imageHover={codeImageHover} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"renex-banner\">\n                    <div className=\"container\">\n                        <div className=\"renex-banner--content\">\n                            <div className=\"renex-banner--logo\">\n                                <img src={whiteRenLogo} />\n                            </div>\n                            <div>\n                                <h1>Trade in complete privacy.</h1>\n                                <p>RenEx Beta is now live</p>\n                            </div>\n                        </div>\n                        <div className=\"renex-banner--buttons\">\n                            <ExternalLink className=\"button\" href={REN_URLS.renEx}>Trade on RenEx</ExternalLink>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"contact\">\n                    <div className=\"container\">\n                        <ContactItem name=\"Partnerships\" email=\"partnerships@republicprotocol.com\" />\n                        <ContactItem name=\"Community Initiatives\" email=\"community@republicprotocol.com\" />\n                        <ContactItem name=\"Technical Support\" email=\"technical@republicprotocol.com\" />\n                    </div>\n                </div>\n                */}\n                <Footer />\n            </div >\n        );\n    }\n}\n\nexport default HomePage;\n","import axios, { AxiosRequestConfig } from \"axios\";\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\ninterface InternalGithubRepo {\n    id: number;\n    node_id: string;\n    name: string;\n    full_name: string;\n    private: boolean;\n    owner: {\n        login: string;\n        id: number;\n        node_id: string;\n        avatar_url: string;\n        gravatar_id: string;\n        url: string;\n        html_url: string;\n        followers_url: string;\n        following_url: string;\n        gists_url: string;\n        starred_url: string;\n        subscriptions_url: string;\n        organizations_url: string;\n        repos_url: string;\n        events_url: string;\n        received_events_url: string;\n        type: string;\n        site_admin: false\n    },\n    html_url: string;\n    description: string;\n    fork: boolean;\n    url: string;\n    forks_url: string;\n    keys_url: string;\n    collaborators_url: string;\n    teams_url: string;\n    hooks_url: string;\n    issue_events_url: string;\n    events_url: string;\n    assignees_url: string;\n    branches_url: string;\n    tags_url: string;\n    blobs_url: string;\n    git_tags_url: string;\n    git_refs_url: string;\n    trees_url: string;\n    statuses_url: string;\n    languages_url: string;\n    stargazers_url: string;\n    contributors_url: string;\n    subscribers_url: string;\n    subscription_url: string;\n    commits_url: string;\n    git_commits_url: string;\n    comments_url: string;\n    issue_comment_url: string;\n    contents_url: string;\n    compare_url: string;\n    merges_url: string;\n    archive_url: string;\n    downloads_url: string;\n    issues_url: string;\n    pulls_url: string;\n    milestones_url: string;\n    notifications_url: string;\n    labels_url: string;\n    releases_url: string;\n    deployments_url: string;\n    created_at: string;\n    updated_at: string;\n    pushed_at: string;\n    git_url: string;\n    ssh_url: string;\n    clone_url: string;\n    svn_url: string;\n    homepage: any | null;\n    size: number;\n    stargazers_count: number;\n    watchers_count: number;\n    language: string | null;\n    has_issues: boolean;\n    has_projects: boolean;\n    has_downloads: boolean;\n    has_wiki: boolean;\n    has_pages: boolean;\n    forks_count: number;\n    mirror_url: any | null;\n    archived: boolean;\n    disabled: boolean;\n    open_issues_count: number;\n    license: null | {\n        key: string;\n        name: string;\n        spdx_id: string;\n        url: string;\n        node_id: string;\n    };\n    forks: number;\n    open_issues: number;\n    watchers: number;\n    default_branch: string;\n};\n\nexport interface GithubRepo extends Omit<Omit<Omit<InternalGithubRepo, \"pushed_at\">, \"updated_at\">, \"created_at\"> {\n    created_at: Date;\n    updated_at: Date;\n    pushed_at: Date;\n}\n\nexport interface GithubStatistics {\n    totalStars: number;\n    lastUpdated: Date;\n    languages: string[];\n}\n\nexport interface GithubActivity {\n    all: number[];\n    owner: number[];\n}\n\nexport const fetchActivity = async (username: string, repo: string): Promise<GithubActivity> => {\n    const resp = await ghGet(`https://api.github.com/repos/${username}/${repo}/stats/participation`);\n    return resp.data as GithubActivity;\n}\n\nexport const fetchRepos = async (username: string): Promise<GithubRepo[]> => {\n    let repos: GithubRepo[] = [];\n    const resp = await ghGet(`https://api.github.com/users/${username}/repos`);\n    for (const repo of resp.data as InternalGithubRepo[]) {\n        const { created_at, updated_at, pushed_at, ...newRepo } = repo;\n        newRepo[\"created_at\"] = new Date(created_at);\n        newRepo[\"updated_at\"] = new Date(updated_at);\n        newRepo[\"pushed_at\"] = new Date(pushed_at);\n        repos.push(newRepo as GithubRepo);\n    }\n    return repos;\n}\n\nexport const calculateStats = (repos: GithubRepo[]): GithubStatistics => {\n    let lastUpdated = null;\n    let totalStars = 0;\n    let languageCount = new Map<string, number>();\n    for (const repo of repos) {\n        totalStars += repo.stargazers_count;\n        if (repo.language !== null) {\n            const count = languageCount.get(repo.language) || 0;\n            languageCount.set(repo.language, count + 1);\n        }\n        if (lastUpdated === null || repo.updated_at > lastUpdated) {\n            lastUpdated = repo.updated_at;\n        }\n    }\n\n    const languages = Array.from(languageCount.keys()).sort((lang1, lang2) => (languageCount.get(lang2) || 0) - (languageCount.get(lang1) || 0));\n    const stats = {\n        totalStars,\n        lastUpdated,\n        languages,\n    };\n    return stats as GithubStatistics;\n}\n\nexport const calculateTotalActivity = async (repos: GithubRepo[]): Promise<number[]> => {\n    const promises = repos.map(r => fetchActivity(r.owner.login, r.name)\n        .then(stats => stats.all)\n        .catch((err) => {\n            console.error(err);\n            return [] as number[];\n        })\n    );\n    return Promise.all(promises).then(allActivity => {\n        return allActivity.reduce((runningTally, current) => {\n            if (runningTally.length === 0) {\n                return current;\n            }\n            return runningTally.map((num, idx) => num + current[idx]);\n        });\n    });\n}\n\nconst ghGet = (url: string) => {\n    let config: AxiosRequestConfig | undefined = undefined;\n    if (process.env.REACT_APP_GITHUB_TOKEN) {\n        config = {\n            headers: {\"Authorization\": `token ${process.env.REACT_APP_GITHUB_TOKEN}`},\n        };\n    }\n    return axios.get(url, config)\n};\n","import * as React from \"react\";\nimport { GithubRepo } from \"../lib/github\";\nimport { ExternalLink } from \"./ExternalLink\";\n\nimport colours from \"github-colors\";\nimport { naturalTime } from \"../lib/conversions\";\n\ninterface GithubBlockProps {\n    repo: GithubRepo;\n}\n\ninterface GithubBlockState {\n}\n\nexport const GithubLanguage = (props: { language: string }) =>\n    <div className=\"repo--stat repo--lang\">\n        <span className=\"repo--stat--icon\">\n            <div className=\"repo--lang--dot\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n                    <circle cx=\"50\" cy=\"50\" r=\"50\" fill={colours.get(props.language).color} />\n                </svg>\n            </div>\n        </span>\n        <span>{props.language}</span>\n    </div>;\n\nexport const GithubStar = (props: { count: number }) => {\n    const ghStar = require(\"../styles/images/icons/gh-icon-star.svg\");\n    return <div className=\"repo--stat\"><span className=\"repo--stat--icon\"><img src={ghStar} /></span>{props.count}</div>;\n}\n\nexport class GithubBlock extends React.Component<GithubBlockProps, GithubBlockState> {\n    constructor(props: GithubBlockProps) {\n        super(props);\n    }\n\n    public render(): JSX.Element {\n        const { repo } = this.props;\n        const ghLaw = require(\"../styles/images/icons/gh-icon-law.svg\");\n        return (\n            <div className=\"gh--block\">\n                <div className=\"gh--content\">\n                    <h2><ExternalLink href={repo.html_url}>{repo.name} &rarr;</ExternalLink></h2>\n                    <p>{repo.description}</p>\n                </div>\n                <div className=\"gh--footer\">\n                    <div className=\"repo--stats\">\n                        {repo.language && <GithubLanguage language={repo.language} />}\n                        <GithubStar count={repo.stargazers_count}/>\n                        {repo.license && <div className=\"repo--stat repo--license\"><span className=\"repo--stat--icon\"><img src={ghLaw} /></span>{repo.license.spdx_id}</div>}\n                    </div>\n                    <div className=\"repo--timeago\">Updated {naturalTime(repo.updated_at.getTime() / 1000, { message: \"a few seconds ago\", suffix: \"ago\", countDown: false })}</div>\n                </div>\n            </div>\n        );\n    }\n\n}\n","import * as React from \"react\";\n\nimport ChartistGraph from \"react-chartist\";\n\ninterface GithubActivityProps {\n    activity: number[];\n};\n\nexport const GithubActivity = (props: GithubActivityProps) => {\n    const [selected, setSelected] = React.useState(\"1Y\");\n\n    const getLimit = (selected: string) => {\n        let weeks = 52;\n        if (selected[selected.length - 1] === \"M\") {\n            weeks = 4 * parseInt(selected.substring(0, selected.length - 1));\n        }\n        return 52 - weeks;\n    }\n\n    const limit = getLimit(selected);\n    const { activity } = props;\n    const data = limit > 0 ? activity.slice(limit) : activity;\n    const lineChartData = {\n        labels: [],\n        series: [data],\n    }\n    const lineChartOptions = {\n        height: 200,\n        width: 400,\n        low: Math.min(...data),\n        high: Math.max(...data),\n        chartPadding: 0,\n        axisX: {\n            showGrid: false,\n            showLabel: false,\n            offset: 0\n        },\n        axisY: {\n            showGrid: false,\n            showLabel: false,\n            offset: 0\n        },\n    }\n    const commitChanges = data.reduce((total, num) => total + num, 0);\n    // const commitChanges = data[data.length - 1] - data[0];\n    // const percentChange = data[0] === 0 ? 0 : Math.round(commitChanges / data[0] * 100);\n    const activitySteps = [\"1Y\", \"6M\", \"3M\", \"1M\"];\n\n    return (\n        <div className=\"gh--activity\">\n            {activity.length === 0 ?\n                <p>Generating activity graph...</p> :\n                <div className=\"gh--activity--chart\">\n                    <div className=\"gh--activity--changes\">\n                        <span>{`${commitChanges > 0 ? \"+\" : \"\"}${commitChanges}`}</span>\n                        {/* <span>{`${commitChanges === 0 ? \"±0%\" : percentChange === 0 ? \"+∞%\" : `${percentChange > 0 ? \"+\" : \"\"}${percentChange}%`}`}</span> */}\n                    </div>\n                    <ChartistGraph data={lineChartData} options={lineChartOptions} type={\"Line\"} />\n                    <ul>\n                        {activitySteps.map((step, index) =>\n                            <li key={step} className={`step${index + 1}of${activitySteps.length} ${selected === step ? \"selected\" : \"\"}`}><a onClick={() => { setSelected(step) }}>{step}</a></li>\n                        )}\n                        <hr />\n                    </ul>\n                </div>\n            }\n        </div>\n    );\n\n}\n","import * as React from \"react\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\n\nimport { fetchRepos, GithubRepo, calculateStats, calculateTotalActivity } from \"../lib/github\";\nimport { GithubBlock, GithubLanguage, GithubStar } from \"./GithubBlock\";\nimport { GithubActivity } from \"./GithubActivity\";\nimport { ExternalLink } from \"./ExternalLink\";\nimport { REN_URLS } from \"../lib/constants\";\nimport { naturalTime } from \"../lib/conversions\";\nimport { withTrashable, TrashableProps } from \"react-trashable\";\nimport { StoreContext } from \"../store/context\";\n\ninterface GithubStatsProps extends TrashableProps {\n    usernames: string[];\n    limit?: number;\n}\n\nconst GithubStatsClass = (props: GithubStatsProps) => {\n    const [error, setError] = React.useState(false);\n    const [ready, setReady] = React.useState(false);\n    const storeContext = React.useContext(StoreContext);\n    if (storeContext === null) {\n        return <></>;\n    }\n    const { githubRepos, setGithubRepos, githubActivity, setGithubActivity } = storeContext;\n\n    const fetchAllRepos = async (): Promise<GithubRepo[]> => {\n        const { usernames } = props;\n        return Promise.all(usernames.map(username => fetchRepos(username))).then(l => ([] as GithubRepo[]).concat(...l));\n    }\n\n    const fetchData = async () => {\n        if (ready) {\n            return\n        };\n\n        try {\n            const repos = await props.registerPromise(fetchAllRepos());\n            setGithubRepos(repos);\n            const activity = await props.registerPromise(calculateTotalActivity(repos));\n            setGithubActivity(activity);\n            setReady(true);\n        } catch (err) {\n            console.error(err);\n            setError(true);\n        }\n    }\n\n    React.useEffect(() => {\n        fetchData();\n    }, []);\n\n    const filterRepos = (): GithubRepo[] => {\n        const { limit } = props;\n        // Only show the Github repos which were updated within the last month\n        const filterDate = new Date();\n        filterDate.setMonth(filterDate.getMonth() - 1);\n        let repos = githubRepos.filter(repo => repo.updated_at > filterDate);\n\n        // sort by stars\n        repos = repos.sort((a, b) => b.stargazers_count - a.stargazers_count);\n\n        if (limit && limit > 0) {\n            repos = repos.slice(0, limit);\n        }\n        return repos;\n    }\n\n    const stats = calculateStats(githubRepos);\n    const fetchError = <p>Failed to fetch information from Github. Please try again later.</p>;\n    const loadingMessage = <p>Fetching data from Github...</p>;\n    return (\n        <div className=\"gh--stats\">\n            <h1>Github</h1>\n            {error ? fetchError : !ready ? loadingMessage :\n                <Tabs forceRenderTabPanel={true}>\n                    <TabList>\n                        <Tab>Overview</Tab>\n                        <Tab>Top Repos</Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <div className=\"gh--stats--overview\">\n                            <div>\n                                <h2>Commit Activity</h2>\n                                <GithubActivity activity={githubActivity} />\n                            </div>\n                            <div>\n                                <h2>Last Commit</h2>\n                                <p>{naturalTime(stats.lastUpdated.getTime() / 1000, { message: \"A few seconds ago\", suffix: \"ago\", countDown: false })}</p>\n                            </div>\n                            <div>\n                                <h2>Stars</h2>\n                                <GithubStar count={stats.totalStars} />\n                            </div>\n                            <div>\n                                <h2>Languages</h2>\n                                <div className=\"gh--stats--lang\">{stats.languages.map(lang => <GithubLanguage key={lang} language={lang} />)}</div>\n                            </div>\n                        </div>\n                        <div className=\"gh--stats--footer\">\n                            <ExternalLink href={REN_URLS.github}>View on Github &rarr;</ExternalLink>\n                        </div>\n                    </TabPanel>\n                    <TabPanel>\n                        <div className=\"github--top--repos\">\n                            {filterRepos().map(repo => <GithubBlock key={repo.id} repo={repo} />)}\n                        </div>\n                    </TabPanel>\n                </Tabs>}\n        </div>\n    );\n\n}\n\nexport const GithubStats = withTrashable(GithubStatsClass);\n","import * as React from \"react\";\nimport { ExternalLink } from \"./ExternalLink\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTelegramPlane } from \"@fortawesome/free-brands-svg-icons\";\n\ninterface TelegramSelectorProps {\n    links: { name: string, url: string }[];\n    default?: number;\n}\n\nexport const TelegramSelector = (props: TelegramSelectorProps) => {\n    const { links } = props;\n    const defaultValue = props.default || 0;\n    const [value, setValue] = React.useState(links[defaultValue].url);\n\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setValue(event.target.value);\n    }\n\n    return (\n        <div className=\"telegram--button\">\n            <div className=\"telegram--button--container\">\n                <ExternalLink className=\"button button--alt\" href={value}><FontAwesomeIcon icon={faTelegramPlane} pull=\"left\" />Open Telegram</ExternalLink>\n                <div className=\"telegram--select\">\n                    <select value={value} onChange={handleChange}>\n                        {links.map((l, index) => <option key={`telegram-select-${index}-${l.name}`} value={l.url}>{l.name}</option>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n","import data from \"../data/milestones.json\";\n\nexport interface Milestone {\n    title: string;\n    description: string;\n    achieved: boolean;\n    tags: string[];\n    date?: string;\n    links?: Array<{ platform: string, url: string }>;\n}\n\nexport const getMilestones = (): Milestone[] => {\n    return data.milestones as Milestone[];\n}\n\nexport const sortMilestones = (self: Milestone, other: Milestone): number => {\n    if (self.achieved && !other.achieved) {\n        return 1;\n    }\n\n    if (other.achieved && !self.achieved) {\n        return -1;\n    }\n\n    if (self.achieved && other.achieved) {\n        const defaultDate = new Date();\n        const selfDate = self.date ? new Date(self.date) : defaultDate;\n        const otherDate = other.date ? new Date(other.date) : defaultDate;\n        return selfDate.getTime() - otherDate.getTime();\n    }\n\n    return 0;\n}","import * as React from \"react\";\n\nimport { faGithub, faMediumM } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Milestone } from \"../lib/milestone\";\nimport { ExternalLink } from \"./ExternalLink\";\n\ninterface MilestoneBlockProps {\n    milestone: Milestone;\n    nextMilestone?: Milestone | null;\n}\n\ninterface MilestoneBlockState {\n    open: boolean;\n}\n\nconst milestoneLink = (platform: string) => {\n    switch(platform){\n        case \"github\":\n            return <><FontAwesomeIcon icon={faGithub} pull=\"left\" /><span>View repo</span></>;\n        case \"medium\":\n            return <><FontAwesomeIcon icon={faMediumM} pull=\"left\" /><span>Read more</span></>;\n        default:\n            return <span />\n    }\n};\n\n\nexport const MilestoneTag = (props: { tag: string, onClick?: () => void, className?: string }) => {\n    return <span\n        className={`milestone--block--tag ${props.tag} ${props.className ? props.className : \"\"}`}\n        onClick={props.onClick ? props.onClick : undefined}\n    >\n        {props.tag}\n    </span>;\n};\n\nexport class MilestoneBlock extends React.Component<MilestoneBlockProps, MilestoneBlockState> {\n    public constructor(props: MilestoneBlockProps) {\n        super(props);\n        this.state = {\n            open: false,\n        }\n    }\n\n    public render(): JSX.Element {\n        const { open } = this.state;\n        const { title, links, description, date, tags, achieved } = this.props.milestone;\n        const nextAchieved = this.props.nextMilestone && this.props.nextMilestone.achieved;\n        return (\n            <div className={`milestone--block--container${achieved ? \" achieved\" : \"\"}${open ? \" open\" : \"\"}${nextAchieved ? \" next-achieved\" : \"\"}`}>\n                <div className={`milestone--block`}\n                    onClick={() => {\n                        this.toggle();\n                    }}\n                >\n                    <div className=\"milestone--block--title\">{title}</div>\n                    <div className=\"milestone--block--date\">{date ? new Date(date).toLocaleDateString() : \"-\"}</div>\n                    <div className=\"milestone--block--tags\">\n                        {tags.map(t => <MilestoneTag key={`${title}--${t}`} tag={t} />)}\n                    </div>\n                </div>\n                <div className={`milestone--block--footer`}>\n                    <div className=\"milestone--block--footer--content\">\n                        <p>{description}</p>\n                        {links && links.length > 0 && <div>\n                            {links.map((l) => (\n                                <ExternalLink key={`${l.platform}--${l.url}`} href={l.url} className={`milestone--link ${l.platform}`}>\n                                    {milestoneLink(l.platform)}\n                                </ExternalLink>\n                            ))}\n                        </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private toggle = () => {\n        this.setState({ open: !this.state.open });\n    }\n}\n","import * as React from \"react\";\n\nimport { Milestone, sortMilestones } from \"../lib/milestone\";\nimport { MilestoneBlock, MilestoneTag } from \"./MilestoneBlock\";\n\ninterface MilestonesProps {\n    milestones: Milestone[];\n}\n\ninterface MilestonesState {\n    allTags: Set<string>;\n    tagsFilter: Set<string>;\n}\n\n\nexport class Milestones extends React.Component<MilestonesProps, MilestonesState> {\n    public constructor(props: MilestonesProps) {\n        super(props);\n        let allTags: string[] = [];\n        props.milestones.forEach(m => {\n            allTags = allTags.concat(m.tags);\n        });\n        this.state = {\n            allTags: new Set(allTags),\n            tagsFilter: new Set<string>(allTags),\n        };\n    }\n\n    public render(): JSX.Element {\n        const { allTags, tagsFilter } = this.state;\n        const { milestones } = this.props;\n        const completedMilestones: Milestone[] = [];\n        const incompleteMilestones: Milestone[] = [];\n        milestones.forEach(m => {\n            if (this.showMilestone(m)) {\n                if (m.achieved) {\n                    completedMilestones.push(m);\n                } else {\n                    incompleteMilestones.push(m);\n                }\n            }\n        });\n        const finalMilestones = completedMilestones.sort(sortMilestones).concat(incompleteMilestones);\n        return (\n            <div className=\"milestones\">\n                <h1>Milestones</h1>\n                <div className=\"milestones--filter\">\n                    <h2>Filter by tags</h2>\n                    <div>\n                        {Array.from(allTags).sort().map(t => {\n                            return <MilestoneTag\n                                className={tagsFilter.has(t) ? \"\" : \"filtered\"}\n                                onClick={() => {\n                                    this.toggleTag(t);\n                                }}\n                                key={`milestone--filter--${t}`}\n                                tag={t}\n                            />;\n                        })}\n                    </div>\n                </div>\n                <div className=\"milestones--list\">\n                    <div className={`milestones--header`}>\n                        <div className=\"milestone--block--title\">Item</div>\n                        <div className=\"milestone--block--date\">Date</div>\n                        <div className=\"milestone--block--tags\">Tags</div>\n                    </div>\n                    {\n                        finalMilestones.map((m, i) => {\n                            const next = i === finalMilestones.length - 1 ? null : finalMilestones[i + 1];\n                            return <MilestoneBlock\n                                key={`milestone--block--${m.title}--${m.date}`}\n                                milestone={m}\n                                nextMilestone={next}\n                            />;\n                        })\n                    }\n                </div>\n                <div className=\"milestones--footnote\">\n                    <p>Given the blockchain space is constantly evolving, certain features or decisions may change over time.</p>\n                </div>\n            </div>\n        );\n    }\n\n    private toggleTag = (t: string) => {\n        const { tagsFilter } = this.state;\n        if (tagsFilter.size > 0 && tagsFilter.has(t)) {\n            tagsFilter.delete(t);\n            this.setState({ tagsFilter });\n        } else {\n            this.setState({ tagsFilter: tagsFilter.add(t) })\n        }\n    }\n\n    private showMilestone = (m: Milestone): boolean => {\n        const { tagsFilter } = this.state;\n        const intersection = new Set([...m.tags].filter(x => tagsFilter.has(x)));\n        return intersection.size > 0;\n    }\n}\n","import * as React from \"react\";\n\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport { MediumBannerInstance } from \"./MediumBanner\";\nimport { GithubStats } from \"./GithubStats\";\nimport ContentBlock from \"./ContentBlock\";\nimport { REN_URLS } from \"../lib/constants\";\nimport { TelegramSelector } from \"./TelegramSelector\";\nimport { Milestones } from \"./Milestones\";\nimport { getMilestones } from \"../lib/milestone\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\nexport const RoadmapPage = () => {\n    const speechIcon = require(`../styles/images/icons/icon-speech.svg`);\n    return (\n        <div className=\"roadmap\">\n            <Header />\n            <div className=\"section section--banner\">\n                <div className=\"container\" />\n            </div>\n            {MediumBannerInstance}\n            <div className=\"section section--ecosystem\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"section--content\">\n                            <ContentBlock subtitle=\"A Growing Ecosystem\">\n                                <p>We're dedicated to developing world class privacy and interoperability <br />focused tools as well as keeping you up-to-date on our progress.</p>\n                            </ContentBlock>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Fade up distance=\"50px\" delay={100}>\n                <div className=\"section section--github\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <GithubStats limit={6} usernames={[\"renproject\", \"republicprotocol\"]} />\n                        </div>\n                    </div>\n                </div>\n            </Fade>\n            <Fade up distance=\"50px\" delay={100}>\n                <div className=\"section section--milestones\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Milestones milestones={getMilestones()} />\n                        </div>\n                    </div>\n                </div>\n            </Fade>\n            <div className=\"telegram--banner\">\n                <div className=\"container\">\n                    <div className=\"banner--content\">\n                        <div>\n                            <h2>Have your say<img src={speechIcon} /></h2>\n                            <p>Provide input and feedback through our Telegram channel</p>\n                        </div>\n                        <TelegramSelector links={[\n                            { name: \"Telegram Community\", url: REN_URLS.telegram },\n                            { name: \"Telegram Announcements\", url: REN_URLS.telegramAnnouncements },\n                        ]} />\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default RoadmapPage;\n","import * as React from \"react\";\n\nimport { faGithub, faTelegramPlane } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { ExternalLink } from \"./ExternalLink\";\nimport { REN_URLS } from \"../lib/constants\";\n\nexport const RenVMStory = () => {\n    const docsImage = require(\"../styles/images/icons/icon-docs.svg\");\n    return (\n        <div className=\"renvm--story--container\">\n            <div className=\"renvm--story\">\n                <h1>What is RenVM?</h1>\n                <h2>RenVM serves as the engine that powers Ren.</h2>\n                <p>Using a new secure multiparty computation algorithm, RenVM provides one of the only practical privacy + interoperability solutions that can scale, and is the only solution that allows for private computation over multiple inputs and multiple parties. </p>\n                <h1>What problem does it solve?</h1>\n                <h2>For many decentralized applications, in particular decentralized finance, solutions for privacy and interoperability are fundamental pieces of the puzzle that are still missing.</h2>\n                <p>Trustless privacy and interoperability is absolutely necessary for achieving truly decentralized applications that are secure, usable, and liquid. Dark pools, DEXs, leverage, lending, collateralization, transferring digital assets and many other use cases are now made private, interoperable, and practical through RenVM.</p>\n                <h1>What can be built with RenVM?</h1>\n                <h2>RenVM serves as an plug-in for decentralized finance and therefore, any DeFi application can incorporate RenVM’s capabilities into their applications and existing smart contracts.</h2>\n                <p>If your project would benefit from cross-chain liquidity, then you stand to benefit from integrating with RenVM.</p>\n                <div className=\"dev--resources\">\n                    <h3>Developer resources</h3>\n                    <p>Take a look at these developer resources for specifics on how RenVM operates.</p>\n                    <div>\n                        <ExternalLink href={REN_URLS.gitbook}><img className=\"docs--icon\" src={docsImage} /><span>Documentation</span></ExternalLink>\n                        <ExternalLink href={REN_URLS.github}><span><FontAwesomeIcon icon={faGithub} pull=\"left\" />Github</span></ExternalLink>\n                        <ExternalLink href={REN_URLS.telegram}><span><FontAwesomeIcon icon={faTelegramPlane} pull=\"left\" />Telegram Community</span></ExternalLink>\n                    </div>\n                </div>\n            </div>\n            <div className=\"story--sidebar--container\">\n                <div className=\"story--sidebar\">\n                    <div className=\"story--sidebar--buttons\">\n                        <div>\n                            <h2>Want to integrate RenVM?</h2>\n                            <p>Sign up here and we'll let you know when it's ready!</p>\n                            <ExternalLink className=\"featured--button primary\" href={REN_URLS.typeform}>Sign Up</ExternalLink>\n                        </div>\n                    </div>\n                    <div className=\"story--sidebar--footer\">\n                        <h2>More questions?</h2>\n                        <ExternalLink className=\"featured--button secondary\" href={REN_URLS.gitbook}><img src={docsImage} />Read the Docs</ExternalLink>\n                        <div className=\"email--link\">Or, <ExternalLink href={`mailto:${REN_URLS.supportEmail}`}>email the team</ExternalLink></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\ninterface OverviewBlockProps {\n    image: any;\n    title: string;\n    subtitle: string;\n    description: string;\n}\n\nexport const OverviewBlock = (props: OverviewBlockProps) => {\n    const { image, title, subtitle, description } = props;\n    return (\n        <div className=\"overview--block\">\n            <div className=\"block--image\">\n                <img src={image} />\n            </div>\n            <div>\n                <h1>{title}</h1>\n                <h2>{subtitle}</h2>\n                <p>{description}</p>\n            </div>\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ContentBlock from \"./ContentBlock\";\nimport { RenVMStory } from \"./RenVMStory\";\nimport { MediumBannerInstance } from \"./MediumBanner\";\nimport { OverviewBlock } from \"./OverviewBlock\";\n\nconst Fade = require(\"react-reveal/Fade\");\n\nclass RenVMPage extends React.Component {\n    private renvmStoryRef = React.createRef<HTMLDivElement>();\n\n    public render(): JSX.Element {\n        const bftIcon = require(\"../styles/images/icons/icon-renvm-bft.svg\");\n        const hyperdriveIcon = require(\"../styles/images/icons/icon-renvm-hyperdrive.svg\");\n        const shamirIcon = require(\"../styles/images/icons/icon-renvm-shamir.svg\");\n        const smpcIcon = require(\"../styles/images/icons/icon-renvm-smpc.svg\");\n        return (\n            <div className=\"renvm\">\n                <Header />\n                <div className=\"section section--renvm\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"featured--content\">\n                                <ContentBlock subtitle={<>RenVM, a trustless &amp; <br />decentralized virtual machine.</>}>\n                                    <p>Secure multi-party computations power a privacy layer for decentralized applications, enabling private and interoperable lending, exchanges, collateralization &amp; more.</p>\n\n                                    <div className=\"featured--buttons\">\n                                        <a onClick={this.scrollToStory} className=\"featured--button primary\">Keep reading &darr;</a>\n                                    </div>\n                                </ContentBlock>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {MediumBannerInstance}\n                <div className=\"section section--features\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Fade up distance=\"50px\" delay={100}>\n                                    <h1>Overview</h1>\n                                    <div className=\"overview--features row\">\n                                        <OverviewBlock\n                                            image={shamirIcon}\n                                            title=\"Shamir's Secret Sharing\"\n                                            subtitle=\"The foundation to how RenVM keeps your data secret\"\n                                            description=\"The premise is simple: a secret is divided into multiple shares, with participants in the secret sharing scheme needing a majority of the parts to be able to reconstruct the secret.\"\n                                        />\n                                        <OverviewBlock\n                                            image={smpcIcon}\n                                            title=\"Secure multiparty Computation (sMPC)\"\n                                            subtitle=\"How RenVM efficiently runs secret scripts\"\n                                            description=\"We have pioneered our own state-of-the-art sMPC algorithm that allows untrusted Darknodes to jointly run scripts without revealing the inputs or outputs of the script to anyone, not even to the machines powering RenVM.\"\n                                        />\n                                        <OverviewBlock\n                                            image={bftIcon}\n                                            title=\"Byzantine Fault Tolerance\"\n                                            subtitle=\"Uptime in a dynamic &amp; potentially malicious environment\"\n                                            description=\"Our network thrives even if Darknodes become unavailable or behave maliciously. Scripts keep running, and secrets stay secret.\"\n                                        />\n                                        <OverviewBlock\n                                            image={hyperdriveIcon}\n                                            title=\"Hyperdrive\"\n                                            subtitle=\"Fast decentralized consensus\"\n                                            description=\"RenVM uses a modified version of the Tendermint consensus algorithm designed specifically for sharding and sMPC.\"\n                                        />\n                                    </div>\n                            </Fade>\n                            <div ref={this.renvmStoryRef}>\n                                <RenVMStory />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n\n    private scrollToStory = () => {\n        if (this.renvmStoryRef.current) {\n            this.renvmStoryRef.current.scrollIntoView();\n        }\n    }\n}\n\nexport default RenVMPage;\n","import * as React from \"react\";\n\nimport { BrowserRouter, Route, RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport AboutPage from \"./AboutPage\";\nimport HomePage from \"./HomePage\";\nimport RoadmapPage from \"./RoadmapPage\";\nimport RenVMPage from \"./RenVMPage\";\nimport { StoreProvider } from \"../store/context\";\n\nconst App = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <StoreProvider>\n                <ScrollToTop />\n                <Route path=\"/\" exact component={HomePage} />\n                <Route path=\"/about\" component={AboutPage} />\n                <Route path=\"/roadmap\" component={RoadmapPage} />\n                <Route path=\"/renvm\" component={RenVMPage} />\n            </StoreProvider>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n\n// Scroll restoration based on https://reacttraining.com/react-router/web/guides/scroll-restoration\nconst ScrollToTop = withRouter(\n    class ScrollToTopWithoutRouter extends React.Component<RouteComponentProps<any>> {\n        public componentDidUpdate(prevProps: Readonly<RouteComponentProps<any>>): void {\n            const { pathname } = this.props.location;\n            if (pathname !== prevProps.location.pathname) {\n                window.scrollTo(0, 0);\n                // Re-enable scrolling if location was changed from mobile menu\n                (document.documentElement as HTMLElement).classList.remove(\"noscroll\");\n                // Get Google Analytics to track the different pages\n                gtag(\"config\", GA_MEASUREMENT_ID, {\"page_path\": pathname});\n            }\n        }\n\n        public render(): JSX.Element | null {\n            return null;\n        }\n    }\n);\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\") as HTMLElement\n);\n"],"sourceRoot":""}